<?php

namespace frontend\controllers;
/**
 * @var Cart $product_id
 */

use common\models\OrderInfo;
use common\models\OrderItem;
use common\models\Product;
use frontend\components\Cart;
use frontend\components\Liked;
use Yii;
use yii\data\ActiveDataProvider;
use yii\data\Pagination;
use yii\filters\VerbFilter;
use yii\web\Controller;
use yii\web\NotFoundHttpException;

class ShopController extends Controller
{
    public function init()
    {
        $til = Yii::$app->request->get('lang', 'uz');
        Yii::$app->language = $til;
        parent::init(); // TODO: Change the autogenerated stub
    }

    public function behaviors()
    {
        return [
            'verbs' => [
                'class' => VerbFilter::className(),
                'actions' => [
                    'index' => ['GET'],
                ],
            ],
        ];
    }

    public function actionIndex()
    {
        $id = Yii::$app->request->get('id', false);
        if (!$id) {
            $query = Product::find()->where(['status' => Product::STATUS_ACTIVE])->orderBy(['created_at' => SORT_DESC]);
            $countQuery = $query->count();
            $pagination = new Pagination([
                'totalCount' => $countQuery,
                'pageSize' => 6,
            ]);
            $products = $query
                ->limit($pagination->limit)
                ->offset($pagination->offset)
                ->all();
        } else {
            $query = Product::find()->where(['status' => Product::STATUS_ACTIVE, 'product_category_id' => $id]);
            $countQuery = $query->count();
            $pagination = new Pagination([
                'totalCount' => $countQuery,
                'pageSize' => 6
            ]);
            $products = $query
                ->limit($pagination->limit)
                ->offset($pagination->offset)
                ->all();
        }
        return $this->render('section/product', ['products' => $products, 'pagination' => $pagination, 'id' => $id]);
    }

    public function actionDetail(int $id)
    {
        $product = $this->findModel($id);

        return $this->render('detail', [
            'product' => $product
        ]);
    }

    public function actionSearch()
    {
        $key = Yii::$app->request->get('key');

        $query = Product::find()
            ->joinWith('translations')
            ->andFilterWhere(['like', 'product_lang.name', $key]);

        $dataProvider = new ActiveDataProvider([
            'query' => $query,
            'pagination' => [
                'pageSize' => 6
            ]
        ]);
        $products = $dataProvider->models;
        $pagination = $dataProvider->pagination;

        return $this->render('section/product', ['products' => $products, 'pagination' => $pagination]);
    }

    public function actionShoppingCart()
    {
        $query = Product::find()->where(['in', 'id', Cart::products()]);

        $dataProvider = new ActiveDataProvider([
            'query' => $query,
            'pagination' => [
                'defaultPageSize' => 6
            ]
        ]);

        $pagination = $dataProvider->pagination;
        $products = $dataProvider->models;

        return $this->render('shopping_cart', ['products' => $products, 'pagination' => $pagination]);
    }

    public function actionLikedProducts()
    {
        $query = Product::find()->where(['in', 'id', Liked::products()]);
        $countQuery = $query->count();

        $pagination = new Pagination([
            'totalCount' => $countQuery,
            'pageSize' => 6
        ]);
        $products = $query
            ->limit($pagination->limit)
            ->offset($pagination->offset)
            ->all();

        return $this->render('liked_products', ['products' => $products, 'pagination' => $pagination]);
    }

    public function actionCheckOut()
    {
        $query = Product::find()->where(['in', 'id', Cart::products()]);

        $dataProvider = new ActiveDataProvider([
            'query' => $query,
            'pagination' => [
                'defaultPageSize' => 3
            ]
        ]);

        $pagination = $dataProvider->pagination;
        $products = $dataProvider->models;

        $model = new OrderInfo();

        if ($model->load(Yii::$app->request->post()) && $model->validate()) {

            $create_time = date('Y-m-d h:i:s');
            $model->created_at = $create_time;

            if ($model->save()) {

                Yii::$app->session->setFlash('success', 'The order was accepted!');

                $ids = Cart::products();

                $products = Product::find()
                    ->where(['in', 'id', $ids])
                    ->all();

                foreach ($products as $product) {

                    $orderItemModel = new OrderItem();

                    $orderItemModel->oder_id = $model->id;
                    $orderItemModel->product_id = $product->id;
                    $orderItemModel->price = $product->priceCount();
                    $orderItemModel->count = Cart::getProductCount($product->id);

                    $orderItemModel->save(false);


                }
                unset($_SESSION['product']);

                return $this->redirect(['shop/index']);
            }
        }
        return $this->render('checkout', ['pagination' => $pagination, 'products' => $products, 'model' => $model]);
    }

    protected function findModel($id)
    {
        if (($model = Product::findOne(['id' => $id])) !== null) {
            return $model;
        }

        throw new NotFoundHttpException(Yii::t('app', 'The requested page does not exist.'));
    }

    public function actionTest()
    {
        $ids = Cart::products();

        $products = Product::find()
            ->where(['in', 'id', $ids])
            ->count();

        print_r($products);
        exit();
    }

}