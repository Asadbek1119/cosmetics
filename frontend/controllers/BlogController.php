<?php

namespace frontend\controllers;

use common\models\BlogNews;
use common\models\ViewsCount;
use Yii;
use yii\data\ActiveDataProvider;
use yii\data\Pagination;
use yii\filters\VerbFilter;
use yii\web\Controller;

class BlogController extends Controller
{
    public function init()
    {
        $til = Yii::$app->request->get('lang', 'uz');
        Yii::$app->language = $til;
        parent::init(); // TODO: Change the autogenerated stub
    }

    public function behaviors()
    {
        return [
            'verbs' => [
                'class' => VerbFilter::className(),
                'actions' => [
                    'index' => ['GET'],
                ],
            ],
        ];
    }

    public function actionIndex()
    {
        $id = Yii::$app->request->get('id',false);
        if (!$id){
            $query = BlogNews::find()->where(['status'=>BlogNews::STATUS_ACTIVE])->orderBy(['created_at'=>SORT_DESC]);
            /** @var $query */
            $countQuery = $query->count();
            $pagination = new Pagination([
                'totalCount' => $countQuery,
                'pageSize' => 4,
            ]);
            $blogNews = $query
                ->limit($pagination->limit)
                ->offset($pagination->offset)
                ->all();
        }else{
            $query = BlogNews::find()->where(['status'=>BlogNews::STATUS_ACTIVE,'blog_category_id' => $id])
                ->orderBy(['created_at'=>SORT_DESC]);
            /** @var $query */
            $countQuery = $query->count();
            $pagination = new Pagination([
                'totalCount' => $countQuery,
                'pageSize' => 4,
            ]);
            $blogNews = $query
                ->limit($pagination->limit)
                ->offset($pagination->offset)
                ->all();
        }
        return $this->render('index',['blogNews'=>$blogNews,'pagination'=>$pagination,'id'=>$id]);
    }
    public function actionDetail(){
        $id = Yii::$app->request->get('id',false);
        $detail = BlogNews::find()
            ->andWhere(['id'=>$id])
            ->one();

        $viewsCount = new ViewsCount();
        $viewsCount->blog_news_id = $id;
        $viewsCount->user_id = \Yii::$app->user->id;
        $timesTamp = date('Y-m-d h:i:s');
        $viewsCount->created_at = $timesTamp;
        $viewsCount->save();

        return $this->render('detail',['detail'=>$detail]);

    }

    public function actionSearch(){
        $key = Yii::$app->request->get('key');

        $query = BlogNews::find()
            ->joinWith('translations')
            ->andFilterWhere(['like','blog_news_lang.theme', $key]);

        $dataProvider = new ActiveDataProvider([
            'query' => $query,
            'pagination' => [
                'pageSize' => 2,
            ]
        ]);
        $blogNews = $dataProvider->models;
        $pagination = $dataProvider->pagination;

        return $this->render('index',['blogNews'=>$blogNews,'pagination'=>$pagination]);
    }
}